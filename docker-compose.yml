version: '3'

services:
  backend:
    container_name: result-django
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    # volumes:
    #   - . :/app
    command: >
      sh -c "python /app/manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=root
    depends_on:
      - db
    # env_file: - .env
    restart: "on-failure"

  db:
    image: postgres:11-alpine
    # ports:
    #   - 5432:5432
    volumes:
      # - db:/var/lib/postgresql/data
      # - "./pgdata:/var/lib/postgresql/data/pgdata"
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root

      # - POSTGRES_HOST=
      # - POSTGRES_DB=
    restart: "on-failure"
volumes:
  postgres_data:



  # db:
  #   image: mysql:5.7.22
  #   restart: always
  #   environments:
  #     MYSQL_DATABASE: admin
  #     MYSQL_USER: root
  #     MYSQL_PASSWORD: root
  #     MYSQL_ROOT_PASSWORD: root
  #   volumes:
  #     - .dbdata:/var/lib/mysql
  #   ports:
  #     - 33066:3306
  #   command: >
  #     sh -c " python manage.py wait_for_db && python manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
  #   environment:
  #     - DB_HOST=db
  #     - DB_NAME=app
  #     - DB_USER=postgres
  #     - DB_PASS=root
  #   depends_on:
  #     - db
